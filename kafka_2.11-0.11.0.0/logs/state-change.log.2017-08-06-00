[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-49 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-38 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-16 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-27 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:22) to brokers Set() for partition weather-0 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-8 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-19 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-2 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-13 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-35 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-46 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-24 (state.change.logger)
[2017-08-06 00:36:09,315] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-5 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-43 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-32 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-21 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-10 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-37 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-48 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-18 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-40 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-29 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-7 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-45 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-34 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-23 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-26 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-4 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-15 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:22) to brokers Set() for partition vital_signs-0 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-42 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-9 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-31 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-20 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition price-0 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-1 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-12 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-28 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-17 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-6 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-39 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-44 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-36 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-47 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-25 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-3 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-14 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-41 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-30 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-11 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-22 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-33 (state.change.logger)
[2017-08-06 00:36:09,316] TRACE Controller 0 epoch 23 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:11,ControllerEpoch:22) to brokers Set() for partition __consumer_offsets-0 (state.change.logger)
[2017-08-06 00:36:09,317] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,19] (state.change.logger)
[2017-08-06 00:36:09,319] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,19] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,319] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,30] (state.change.logger)
[2017-08-06 00:36:09,321] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,30] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,321] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,47] (state.change.logger)
[2017-08-06 00:36:09,323] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,47] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,323] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,29] (state.change.logger)
[2017-08-06 00:36:09,324] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,29] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,325] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,41] (state.change.logger)
[2017-08-06 00:36:09,326] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,41] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,327] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,39] (state.change.logger)
[2017-08-06 00:36:09,329] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,39] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,329] TRACE Controller 0 epoch 23 started leader election for partition [price,0] (state.change.logger)
[2017-08-06 00:36:09,332] ERROR Controller 0 epoch 23 initiated state change for partition [price,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [price,0] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,332] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,17] (state.change.logger)
[2017-08-06 00:36:09,334] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,17] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,335] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,10] (state.change.logger)
[2017-08-06 00:36:09,337] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,10] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,337] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,14] (state.change.logger)
[2017-08-06 00:36:09,338] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,14] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,339] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,40] (state.change.logger)
[2017-08-06 00:36:09,341] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,40] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,341] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,18] (state.change.logger)
[2017-08-06 00:36:09,343] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,18] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,343] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,0] (state.change.logger)
[2017-08-06 00:36:09,347] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,0] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,347] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,26] (state.change.logger)
[2017-08-06 00:36:09,349] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,26] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,349] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,24] (state.change.logger)
[2017-08-06 00:36:09,350] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,24] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,351] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,33] (state.change.logger)
[2017-08-06 00:36:09,355] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,33] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,355] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,20] (state.change.logger)
[2017-08-06 00:36:09,357] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,20] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,357] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,21] (state.change.logger)
[2017-08-06 00:36:09,361] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,21] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,361] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,3] (state.change.logger)
[2017-08-06 00:36:09,363] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,3] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,363] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,22] (state.change.logger)
[2017-08-06 00:36:09,365] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,22] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,365] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,5] (state.change.logger)
[2017-08-06 00:36:09,367] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,5] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,367] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,12] (state.change.logger)
[2017-08-06 00:36:09,368] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,12] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,368] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,8] (state.change.logger)
[2017-08-06 00:36:09,370] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,8] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,370] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,23] (state.change.logger)
[2017-08-06 00:36:09,373] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,23] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,373] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,15] (state.change.logger)
[2017-08-06 00:36:09,375] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,15] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,375] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,48] (state.change.logger)
[2017-08-06 00:36:09,377] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,48] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,377] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,11] (state.change.logger)
[2017-08-06 00:36:09,378] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,11] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,379] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,13] (state.change.logger)
[2017-08-06 00:36:09,380] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,13] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,381] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,6] (state.change.logger)
[2017-08-06 00:36:09,382] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,6] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,382] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,49] (state.change.logger)
[2017-08-06 00:36:09,388] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,49] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,388] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,4] (state.change.logger)
[2017-08-06 00:36:09,394] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,4] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,395] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,28] (state.change.logger)
[2017-08-06 00:36:09,397] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,28] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,398] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,37] (state.change.logger)
[2017-08-06 00:36:09,400] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,37] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,400] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,31] (state.change.logger)
[2017-08-06 00:36:09,410] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,31] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,410] TRACE Controller 0 epoch 23 started leader election for partition [weather,0] (state.change.logger)
[2017-08-06 00:36:09,411] ERROR Controller 0 epoch 23 initiated state change for partition [weather,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [weather,0] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,412] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,44] (state.change.logger)
[2017-08-06 00:36:09,413] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,44] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,413] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,42] (state.change.logger)
[2017-08-06 00:36:09,415] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,42] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,415] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,34] (state.change.logger)
[2017-08-06 00:36:09,417] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,34] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,417] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,46] (state.change.logger)
[2017-08-06 00:36:09,419] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,46] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,419] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,25] (state.change.logger)
[2017-08-06 00:36:09,421] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,25] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,421] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,27] (state.change.logger)
[2017-08-06 00:36:09,423] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,27] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,423] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,45] (state.change.logger)
[2017-08-06 00:36:09,424] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,45] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,424] TRACE Controller 0 epoch 23 started leader election for partition [vital_signs,0] (state.change.logger)
[2017-08-06 00:36:09,426] ERROR Controller 0 epoch 23 initiated state change for partition [vital_signs,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [vital_signs,0] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,426] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,32] (state.change.logger)
[2017-08-06 00:36:09,428] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,32] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,428] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,43] (state.change.logger)
[2017-08-06 00:36:09,430] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,43] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,431] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,36] (state.change.logger)
[2017-08-06 00:36:09,432] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,36] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,432] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,35] (state.change.logger)
[2017-08-06 00:36:09,434] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,35] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,434] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,7] (state.change.logger)
[2017-08-06 00:36:09,435] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,7] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,436] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,38] (state.change.logger)
[2017-08-06 00:36:09,437] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,38] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,437] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,9] (state.change.logger)
[2017-08-06 00:36:09,439] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,9] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,439] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,1] (state.change.logger)
[2017-08-06 00:36:09,440] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,1] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,441] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,2] (state.change.logger)
[2017-08-06 00:36:09,442] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,2] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
[2017-08-06 00:36:09,442] TRACE Controller 0 epoch 23 started leader election for partition [__consumer_offsets,16] (state.change.logger)
[2017-08-06 00:36:09,444] ERROR Controller 0 epoch 23 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No broker in ISR for partition [__consumer_offsets,16] is alive. Live brokers are: [Set()], ISR brokers are: [0]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:65)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:308)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:164)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:85)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:82)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:130)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:82)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:59)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:271)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1577)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1512)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:50)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:49)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:64)
